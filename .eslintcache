[{"/home/phoenix/Documents/chart_bigdata_reactjs/src/index.js":"1","/home/phoenix/Documents/chart_bigdata_reactjs/src/reportWebVitals.js":"2","/home/phoenix/Documents/chart_bigdata_reactjs/src/App.js":"3","/home/phoenix/Documents/chart_bigdata_reactjs/src/tags.js":"4"},{"size":500,"mtime":1608225940521,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608225940521,"results":"7","hashOfConfig":"6"},{"size":9171,"mtime":1608400736174,"results":"8","hashOfConfig":"6"},{"size":2123,"mtime":1608378661301,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1rsd9h2",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/phoenix/Documents/chart_bigdata_reactjs/src/index.js",[],["21","22"],"/home/phoenix/Documents/chart_bigdata_reactjs/src/reportWebVitals.js",[],"/home/phoenix/Documents/chart_bigdata_reactjs/src/App.js",["23","24","25","26","27","28","29","30","31"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport tags from \"./tags.js\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\nconst ENDPOINT = \"http://localhost:5001\";\n// const socket = socketIOClient(ENDPOINT, { transports: ['websocket', 'polling', 'flashsocket'] });\nconst socket = io(ENDPOINT, { transports: ['websocket', 'polling', 'flashsocket'] });\n\n// export default App;\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    socket.on(\"connection\", () => {\n      console.log(\"connect to server\");\n    });\n    socket.on('topic', data => {\n      console.log(data)\n      play();\n      // setResponse(data);\n    })\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    chart.padding(10, 10, 10, 10);\n\n    chart.numberFormatter.bigNumberPrefixes = [\n      { number: 1e3, suffix: \"K\" },\n      { number: 1e6, suffix: \"M\" },\n      { number: 1e9, suffix: \"B\" },\n    ];\n\n    // chart.legend = new am4charts.Legend();\n    // chart.legend.position = \"right\";\n\n\n    var label = chart.plotContainer.createChild(am4core.Label);\n    label.x = am4core.percent(97);\n    label.y = am4core.percent(95);\n    label.horizontalCenter = \"right\";\n    label.verticalCenter = \"middle\";\n    label.dx = -15;\n    label.fontSize = 40;\n\n    var playButton = chart.plotContainer.createChild(am4core.PlayButton);\n    playButton.x = am4core.percent(97);\n    playButton.y = am4core.percent(95);\n    playButton.dy = -2;\n    playButton.verticalCenter = \"middle\";\n    playButton.events.on(\"toggled\", function (event) {\n      if (event.target.isActive) {\n        play();\n      } else {\n        stop();\n      }\n    });\n\n    chart.legend = new am4charts.Legend();\n    chart.legend.position = \"right\";\n\n    var stepDuration = 4000;\n\n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.dataFields.category = \"choice\";\n    // categoryAxis.title.text = \"Tags\";\n    categoryAxis.renderer.minGridDistance = 20;\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.inversed = true;\n    categoryAxis.renderer.grid.template.disabled = true;\n    categoryAxis.renderer.cellStartLocation = 0.1;\n    categoryAxis.renderer.cellEndLocation = 0.9;\n\n    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n    valueAxis.min = 0;\n    valueAxis.rangeChangeEasing = am4core.ease.linear;\n    valueAxis.rangeChangeDuration = stepDuration;\n    valueAxis.extraMax = 0.1;\n    valueAxis.title.text = \"Number of tweets\";\n\n    var series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.categoryY = \"choice\";\n    series.dataFields.valueX = \"numberOfTweets\";\n    series.name = \"positive\";\n    series.columns.template.strokeOpacity = 0;\n    series.interpolationDuration = stepDuration;\n    series.interpolationEasing = am4core.ease.linear;\n    series.columns.template.column.cornerRadiusBottomRight = 5;\n    series.columns.template.column.cornerRadiusTopRight = 5;\n\n    var series2 = chart.series.push(new am4charts.ColumnSeries());\n    series2.dataFields.categoryY = \"choice\";\n    series2.dataFields.valueX = \"numberOfTweets2\";\n    series2.name = \"negative\";\n    series2.columns.template.strokeOpacity = 0;\n    series2.interpolationDuration = stepDuration;\n    series2.interpolationEasing = am4core.ease.linear;\n    series2.columns.template.column.cornerRadiusBottomRight = 5;\n    series2.columns.template.column.cornerRadiusTopRight = 5;\n\n    var series3 = chart.series.push(new am4charts.ColumnSeries());\n    series3.dataFields.categoryY = \"choice\";\n    series3.dataFields.valueX = \"numberOfTweets3\";\n    series3.name = \"neutral\";\n    series3.columns.template.strokeOpacity = 0;\n    series3.interpolationDuration = stepDuration;\n    series3.interpolationEasing = am4core.ease.linear;\n    series3.columns.template.column.cornerRadiusBottomRight = 5;\n    series3.columns.template.column.cornerRadiusTopRight = 5;\n\n    var labelBullet = series.bullets.push(new am4charts.LabelBullet());\n    labelBullet.locationX = 0.5;\n    labelBullet.label.text = \"{valueX}\";\n    labelBullet.label.fill = am4core.color(\"#fff\");\n\n    var labelBullet = series2.bullets.push(new am4charts.LabelBullet());\n    labelBullet.locationX = 0.5;\n    function stop() {\n      if (interval) {\n        clearInterval(interval);\n      }\n    } var labelBullet = series3.bullets.push(new am4charts.LabelBullet());\n    labelBullet.locationX = 0.5;\n    labelBullet.label.text = \"{valueX}\";\n    labelBullet.label.fill = am4core.color(\"#fff\");\n\n    chart.zoomOutButton.disabled = true;\n\n    var day = 3;\n    var month = 11;\n    label.text = day.toString() + \"/\" + month.toString();\n\n    var interval;\n\n    function play() {\n      // interval = setInterval(function () {\n      //   nextDay();\n      // }, stepDuration);\n      nextDay();\n    }\n\n    function stop() {\n      if (interval) {\n        clearInterval(interval);\n      }\n    }\n\n    function nextDay() {\n      day++;\n\n      if (day > 30) {\n        month++;\n        day = 1;\n      }\n\n      if (day === 14 && month === 12) {\n        day = 3;\n        month = 11;\n      }\n\n      var newData = allData[day.toString() + \"/\" + month.toString()];\n\n      var itemsWithNonZero = 0;\n      var itemsWithNonZero2 = 0;\n      var itemsWithNonZero3 = 0;\n      for (var i = 0; i < chart.data.length; i++) {\n        chart.data[i].numberOfTweets = newData[i].numberOfTweets;\n        chart.data[i].numberOfTweets2 = newData[i].numberOfTweets2;\n        chart.data[i].numberOfTweets3 = newData[i].numberOfTweets3;\n        if (chart.data[i].numberOfTweets > 0) {\n          itemsWithNonZero++;\n        }\n        if (chart.data[i].numberOfTweets2 > 0) {\n          itemsWithNonZero2++;\n        }\n        if (chart.data[i].numberOfTweets3 > 0) {\n          itemsWithNonZero3++;\n        }\n      }\n\n      if (month === 11 || month === 12) {\n        series.interpolationDuration = stepDuration / 4;\n        series2.interpolationDuration = stepDuration / 4;\n        series3.interpolationDuration = stepDuration / 4;\n        valueAxis.rangeChangeDuration = stepDuration / 4;\n      } else {\n        series.interpolationDuration = stepDuration;\n        series2.interpolationDuration = stepDuration;\n        series3.interpolationDuration = stepDuration;\n        valueAxis.rangeChangeDuration = stepDuration;\n      }\n\n      chart.invalidateRawData();\n      label.text = day.toString() + \"/\" + month.toString();\n\n      categoryAxis.zoom({\n        start: 0,\n        end: itemsWithNonZero / categoryAxis.dataItems.length,\n      });\n    }\n\n    categoryAxis.sortBySeries = series;\n    categoryAxis.sortBySeries = series2;\n    categoryAxis.sortBySeries = series3;\n\n    function generateData() {\n      var data = [];\n\n      // generate random data for allData\n      for (var i = 0; i < tags.length; i++) {\n        var tweetNumber = Math.floor(Math.random() * 10000);\n        var dataElement = {\n          choice: tags[i],\n          numberOfTweets: tweetNumber + Math.floor(Math.random() * 10000),\n          numberOfTweets2: tweetNumber + Math.floor(Math.random() * 10000),\n          numberOfTweets3: tweetNumber + Math.floor(Math.random() * 10000),\n        };\n\n        data.push(dataElement);\n      }\n\n      return data;\n    }\n\n    var numberOfDays = 30 - 3 + 14;\n    var allData = [];\n    var oldData;\n\n    function fillData() {\n      var dayLabel = 3;\n      var monthLabel = 11;\n      for (var i = 0; i < numberOfDays; i++) {\n\n        var labelTag = dayLabel.toString() + \"/\" + monthLabel.toString();\n\n        dayLabel++;\n\n        if (dayLabel === 31 && monthLabel === 11) {\n          dayLabel = 1;\n          monthLabel = 12;\n        }\n\n        var dataArr = generateData();\n        // add old data to new data\n        if (oldData) {\n          for (var j = 0; j < tags.length; j++) {\n            dataArr[j].numberOfTweets += oldData[j].numberOfTweets;\n            dataArr[j].numberOfTweets2 += oldData[j].numberOfTweets2;\n            dataArr[j].numberOfTweets3 += oldData[j].numberOfTweets3;\n          }\n        }\n\n        oldData = dataArr;\n        dataArr = dataArr.sort().slice(0, 5);\n\n        // allData is main data array use for fill data\n        allData[labelTag] = dataArr;\n      }\n    }\n\n    fillData();\n\n    chart.data = JSON.parse(\n      JSON.stringify(allData[day.toString() + \"/\" + month.toString()])\n    );\n    categoryAxis.zoom({ start: 0, end: 1 / chart.data.length });\n\n    series.events.on(\"inited\", function () {\n      setTimeout(function () {\n        playButton.isActive = true; // this starts interval\n      }, 4000);\n    });\n\n    this.chart = chart\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    );\n  }\n}","/home/phoenix/Documents/chart_bigdata_reactjs/src/tags.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":6,"column":10,"nodeType":"40","messageId":"41","endLine":6,"endColumn":19},{"ruleId":"38","severity":1,"message":"43","line":6,"column":21,"nodeType":"40","messageId":"41","endLine":6,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":18,"column":3,"nodeType":"46","messageId":"47","endLine":20,"endColumn":4},{"ruleId":"48","severity":1,"message":"49","line":125,"column":9,"nodeType":"40","messageId":"50","endLine":125,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":131,"column":11,"nodeType":"40","messageId":"50","endLine":131,"endColumn":22},{"ruleId":"48","severity":1,"message":"51","line":151,"column":14,"nodeType":"40","messageId":"50","endLine":151,"endColumn":18},{"ruleId":"38","severity":1,"message":"52","line":183,"column":11,"nodeType":"40","messageId":"41","endLine":183,"endColumn":28},{"ruleId":"38","severity":1,"message":"53","line":186,"column":11,"nodeType":"40","messageId":"41","endLine":186,"endColumn":28},{"ruleId":"34","replacedBy":"54"},{"ruleId":"36","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-redeclare","'labelBullet' is already defined.","redeclared","'stop' is already defined.","'itemsWithNonZero2' is assigned a value but never used.","'itemsWithNonZero3' is assigned a value but never used.",["56"],["57"],"no-global-assign","no-unsafe-negation"]